BEGIN {
D["PACKAGE_NAME"]=" \"libfabric\""
D["PACKAGE_TARNAME"]=" \"libfabric\""
D["PACKAGE_VERSION"]=" \"1.21.0a1\""
D["PACKAGE_STRING"]=" \"libfabric 1.21.0a1\""
D["PACKAGE_BUGREPORT"]=" \"ofiwg@lists.openfabrics.org\""
D["PACKAGE_URL"]=" \"\""
D["PACKAGE"]=" \"libfabric\""
D["VERSION"]=" \"1.21.0a1\""
D["BUILD_ID"]=" \"\""
D["ENABLE_DEBUG"]=" 0"
D["HAVE_TYPEOF"]=" 1"
D["HAVE_STDIO_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_ELF_H"]=" 1"
D["HAVE_SYS_AUXV_H"]=" 1"
D["STDC_HEADERS"]=" 1"
D["HAVE_DLFCN_H"]=" 1"
D["LT_OBJDIR"]=" \".libs/\""
D["HAVE_LIBDL"]=" 1"
D["HAVE_LIBPTHREAD"]=" 1"
D["PT_LOCK_SPIN"]=" 1"
D["HAVE_EPOLL_CREATE"]=" 1"
D["HAVE_EPOLL"]=" 1"
D["HAVE_LINUX_PERF_RDPMC"]=" 1"
D["HAVE_ATOMICS"]=" 1"
D["HAVE_ATOMICS_LEAST_TYPES"]=" 1"
D["HAVE_BUILTIN_ATOMICS"]=" 1"
D["HAVE_BUILTIN_MM_ATOMICS"]=" 1"
D["HAVE___INT128"]=" 1"
D["HAVE_CPUID"]=" 1"
D["HAVE_XPMEM"]=" 0"
D["HAVE_SYMVER_SUPPORT"]=" 1"
D["HAVE_ALIAS_ATTRIBUTE"]=" 1"
D["HAVE_GETIFADDRS"]=" 1"
D["HAVE_ETHTOOL"]=" 1"
D["HAVE_DECL_ETHTOOL_CMD_SPEED"]=" 1"
D["HAVE_DECL_SPEED_UNKNOWN"]=" 1"
D["HAVE_LINUX_USERFAULTFD_H"]=" 1"
D["HAVE_UFFD_UNMAP"]=" 1"
D["HAVE_RESTRICTED_DL"]=" 0"
D["HAVE_CLOCK_GETTIME"]=" 1"
D["HAVE_CUDA_RUNTIME_H"]=" 1"
D["ENABLE_CUDA_DLOPEN"]=" 1"
D["HAVE_CUDA"]=" 1"
D["HAVE_CUDA_DMABUF"]=" 1"
D["ENABLE_ZE_DLOPEN"]=" 0"
D["HAVE_ZE"]=" 0"
D["HAVE_DRM"]=" 0"
D["HAVE_LIBDRM"]=" 0"
D["HAVE_NEURON"]=" 0"
D["HAVE_SYNAPSEAI"]=" 0"
D["ENABLE_MEMHOOKS_MONITOR"]=" 1"
D["HAVE_LTTNG"]=" 0"
D["HAVE___CURBRK"]=" 1"
D["HAVE___CLEAR_CACHE"]=" 1"
D["HAVE_LINUX_MMAN_H"]=" 1"
D["HAVE_SYS_SYSCALL_H"]=" 1"
D["HAVE_DECL___SYSCALL"]=" 0"
D["ENABLE_UFFD_MONITOR"]=" 1"
D["HAVE_GDRAPI_H"]=" 1"
D["ENABLE_GDRCOPY_DLOPEN"]=" 1"
D["HAVE_GDRCOPY"]=" 1"
D["ENABLE_ROCR_DLOPEN"]=" 0"
D["HAVE_ROCR"]=" 0"
D["HAVE_HSA_AMD_PORTABLE_EXPORT_DMABUF"]=" 0"
D["SIZEOF_VOID_P"]=" 8"
D["HAVE_PSM2_SRC"]=" 0"
D["HAVE_PSM2_AM_REGISTER_HANDLERS_2"]=" 0"
D["HAVE_PSM2_MQ_FP_MSG"]=" 0"
D["HAVE_PSM2_MQ_REQ_USER"]=" 0"
D["HAVE_PSM2_INFO_QUERY"]=" 0"
D["HAVE_PSM2"]=" 0"
D["HAVE_PSM2_DL"]=" 0"
D["HAVE_PSM3_SRC"]=" 1"
D["PSM3_MARCH"]=" \"\""
D["HAVE_PSM3"]=" 0"
D["HAVE_PSM3_DL"]=" 0"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_GETIFADDRS"]=" 1"
D["HAVE_SOCKETS"]=" 1"
D["HAVE_SOCKETS_DL"]=" 0"
D["VERBS_HAVE_QUERY_EX"]=" 0"
D["VERBS_HAVE_XRC"]=" 0"
D["VERBS_HAVE_RDMA_ESTABLISH"]=" 0"
D["VERBS_HAVE_DMABUF_MR"]=" 0"
D["HAVE_VERBS"]=" 0"
D["HAVE_VERBS_DL"]=" 0"
D["HAVE_INFINIBAND_VERBS_H"]=" 1"
D["HAVE_INFINIBAND_EFADV_H"]=" 1"
D["HAVE_RDMA_SIZE"]=" 1"
D["HAVE_CAPS_RNR_RETRY"]=" 1"
D["HAVE_CAPS_RDMA_WRITE"]=" 1"
D["HAVE_IBV_IS_FORK_INITIALIZED"]=" 1"
D["HAVE_EFADV_CQ_EX"]=" 1"
D["HAVE_EFA_DATA_IN_ORDER_ALIGNED_128_BYTES"]=" 1"
D["HAVE_EFA_DMABUF_MR"]=" 1"
D["EFA_UNIT_TEST"]=" 0"
D["HAVE_EFA"]=" 1"
D["HAVE_EFA_DL"]=" 0"
D["HAVE_UDP"]=" 1"
D["HAVE_UDP_DL"]=" 0"
D["HAVE_TCP"]=" 1"
D["HAVE_TCP_DL"]=" 0"
D["HAVE_RXM"]=" 1"
D["HAVE_RXM_DL"]=" 0"
D["HAVE_MRAIL"]=" 1"
D["HAVE_MRAIL_DL"]=" 0"
D["HAVE_RXD"]=" 1"
D["HAVE_RXD_DL"]=" 0"
D["HAVE_SYS_MMAN_H"]=" 1"
D["SHM_HAVE_DSA"]=" 0"
D["HAVE_SHM"]=" 1"
D["HAVE_SHM_DL"]=" 0"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_SM2"]=" 1"
D["HAVE_SM2_DL"]=" 0"
D["HAVE_UCX"]=" 0"
D["HAVE_UCX_DL"]=" 0"
D["HAVE_PERF"]=" 1"
D["HAVE_PERF_DL"]=" 0"
D["HAVE_TRACE"]=" 1"
D["HAVE_TRACE_DL"]=" 0"
D["HAVE_PROFILE"]=" 0"
D["HAVE_PROFILE_DL"]=" 0"
D["HAVE_HOOK_DEBUG"]=" 1"
D["HAVE_HOOK_DEBUG_DL"]=" 0"
D["HAVE_HOOK_HMEM"]=" 1"
D["HAVE_HOOK_HMEM_DL"]=" 0"
D["HAVE_DMABUF_PEER_MEM"]=" 1"
D["HAVE_DMABUF_PEER_MEM_DL"]=" 0"
D["HAVE_OPX"]=" 0"
D["HAVE_OPX_DL"]=" 0"
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
